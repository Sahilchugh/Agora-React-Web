{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport AgoraRTC__default from 'agora-rtc-sdk-ng';\nexport * from 'agora-rtc-sdk-ng';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar createClient = function createClient(config) {\n  var client;\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC__default.createClient(config);\n    }\n    return client;\n  }\n  return function () {\n    return createClosure();\n  };\n};\nfunction createMicrophoneAndCameraTracks(audioConfig, videoConfig) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAndCameraTracks(audioConfig, videoConfig)).then(function (_AgoraRTC$createMicro) {\n        tracks = _AgoraRTC$createMicro;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var tracks = null;\n  return function useMicrophoneAndCameraTracks() {\n    var _useState = useState(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n    var _useState2 = useState(null),\n      agoraRTCError = _useState2[0],\n      setAgoraRTCError = _useState2[1];\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        tracks = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createBufferSourceAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createBufferSourceAudioTrack(config)).then(function (_AgoraRTC$createBuffe) {\n        track = _AgoraRTC$createBuffe;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useBufferSourceAudioTrack() {\n    var _useState3 = useState(false),\n      ready = _useState3[0],\n      setReady = _useState3[1];\n    var _useState4 = useState(null),\n      agoraRTCError = _useState4[0],\n      setAgoraRTCError = _useState4[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createCameraVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCameraVideoTrack(config)).then(function (_AgoraRTC$createCamer) {\n        track = _AgoraRTC$createCamer;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useCameraVideoTrack() {\n    var _useState5 = useState(false),\n      ready = _useState5[0],\n      setReady = _useState5[1];\n    var _useState6 = useState(null),\n      agoraRTCError = _useState6[0],\n      setAgoraRTCError = _useState6[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createCustomAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomAudioTrack(config)).then(function (_AgoraRTC$createCusto) {\n        track = _AgoraRTC$createCusto;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useCustomAudioTrack() {\n    var _useState7 = useState(false),\n      ready = _useState7[0],\n      setReady = _useState7[1];\n    var _useState8 = useState(null),\n      agoraRTCError = _useState8[0],\n      setAgoraRTCError = _useState8[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createCustomVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomVideoTrack(config)).then(function (_AgoraRTC$createCusto2) {\n        track = _AgoraRTC$createCusto2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useCustomVideoTrack() {\n    var _useState9 = useState(false),\n      ready = _useState9[0],\n      setReady = _useState9[1];\n    var _useState10 = useState(null),\n      agoraRTCError = _useState10[0],\n      setAgoraRTCError = _useState10[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createMicrophoneAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAudioTrack(config)).then(function (_AgoraRTC$createMicro2) {\n        track = _AgoraRTC$createMicro2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useMicrophoneAudioTrack() {\n    var _useState11 = useState(false),\n      ready = _useState11[0],\n      setReady = _useState11[1];\n    var _useState12 = useState(null),\n      agoraRTCError = _useState12[0],\n      setAgoraRTCError = _useState12[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createScreenVideoTrack(config, withAudio) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createScreenVideoTrack(config, withAudio)).then(function (_AgoraRTC$createScree) {\n        tracks = _AgoraRTC$createScree;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var tracks;\n  return function useScreenVideoTrack() {\n    var _useState13 = useState(false),\n      ready = _useState13[0],\n      setReady = _useState13[1];\n    var _useState14 = useState(null),\n      agoraRTCError = _useState14[0],\n      setAgoraRTCError = _useState14[1];\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === undefined) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nvar AgoraVideoPlayer = function AgoraVideoPlayer(props) {\n  var vidDiv = useRef(null);\n  var videoTrack = props.videoTrack,\n    config = props.config,\n    other = _objectWithoutPropertiesLoose(props, [\"videoTrack\", \"config\"]);\n  useEffect(function () {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current, config);\n    return function () {\n      videoTrack.stop();\n    };\n  }, [videoTrack]);\n  return React.createElement(\"div\", Object.assign({}, other, {\n    ref: vidDiv\n  }));\n};\nexport default AgoraRTC__default;\nexport { AgoraVideoPlayer, createBufferSourceAudioTrack, createCameraVideoTrack, createClient, createCustomAudioTrack, createCustomVideoTrack, createMicrophoneAndCameraTracks, createMicrophoneAudioTrack, createScreenVideoTrack };","map":{"version":3,"names":["createClient","config","client","createClosure","AgoraRTC__default","createMicrophoneAndCameraTracks","audioConfig","videoConfig","then","_AgoraRTC$createMicro","tracks","e","useMicrophoneAndCameraTracks","useState","ready","_useState","setReady","agoraRTCError","_useState2","setAgoraRTCError","ref","useRef","useEffect","current","error","createBufferSourceAudioTrack","_AgoraRTC$createBuffe","track","useBufferSourceAudioTrack","_useState3","_useState4","createCameraVideoTrack","_AgoraRTC$createCamer","useCameraVideoTrack","_useState5","_useState6","createCustomAudioTrack","_AgoraRTC$createCusto","useCustomAudioTrack","_useState7","_useState8","createCustomVideoTrack","_AgoraRTC$createCusto2","useCustomVideoTrack","_useState9","_useState10","createMicrophoneAudioTrack","_AgoraRTC$createMicro2","useMicrophoneAudioTrack","_useState11","_useState12","createScreenVideoTrack","withAudio","_AgoraRTC$createScree","useScreenVideoTrack","_useState13","_useState14","undefined","AgoraVideoPlayer","props","vidDiv","videoTrack","other","_objectWithoutPropertiesLoose","play","stop","React","createElement","Object","assign"],"sources":["C:\\Users\\Admin\\VsCode\\React Agora\\node_modules\\agora-rtc-react\\src\\index.tsx"],"sourcesContent":["import React, { RefObject, useEffect, useRef, useState } from 'react'\r\nimport AgoraRTC, {\r\n  BufferSourceAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n  ClientConfig,\r\n  CustomAudioTrackInitConfig,\r\n  CustomVideoTrackInitConfig,\r\n  IAgoraRTCClient,\r\n  IBufferSourceAudioTrack,\r\n  ICameraVideoTrack,\r\n  ILocalAudioTrack,\r\n  ILocalVideoTrack,\r\n  IMicrophoneAudioTrack,\r\n  IRemoteVideoTrack,\r\n  MicrophoneAudioTrackInitConfig,\r\n  ScreenVideoTrackInitConfig,\r\n  VideoPlayerConfig\r\n} from 'agora-rtc-sdk-ng'\r\n\r\nexport default AgoraRTC;\r\nexport * from 'agora-rtc-sdk-ng';\r\n\r\nexport interface AgoraRTCError {\r\n  code: AgoraRTCErrorCode;\r\n  message: string;\r\n  data?: any;\r\n  name: string;\r\n}\r\n\r\nexport declare enum AgoraRTCErrorCode {\r\n  UNEXPECTED_ERROR = \"UNEXPECTED_ERROR\",\r\n  UNEXPECTED_RESPONSE = \"UNEXPECTED_RESPONSE\",\r\n  TIMEOUT = \"TIMEOUT\",\r\n  INVALID_PARAMS = \"INVALID_PARAMS\",\r\n  NOT_SUPPORTED = \"NOT_SUPPORTED\",\r\n  INVALID_OPERATION = \"INVALID_OPERATION\",\r\n  OPERATION_ABORTED = \"OPERATION_ABORTED\",\r\n  WEB_SECURITY_RESTRICT = \"WEB_SECURITY_RESTRICT\",\r\n  NETWORK_ERROR = \"NETWORK_ERROR\",\r\n  NETWORK_TIMEOUT = \"NETWORK_TIMEOUT\",\r\n  NETWORK_RESPONSE_ERROR = \"NETWORK_RESPONSE_ERROR\",\r\n  API_INVOKE_TIMEOUT = \"API_INVOKE_TIMEOUT\",\r\n  ENUMERATE_DEVICES_FAILED = \"ENUMERATE_DEVICES_FAILED\",\r\n  DEVICE_NOT_FOUND = \"DEVICE_NOT_FOUND\",\r\n  ELECTRON_IS_NULL = \"ELECTRON_IS_NULL\",\r\n  ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR = \"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\",\r\n  CHROME_PLUGIN_NO_RESPONSE = \"CHROME_PLUGIN_NO_RESPONSE\",\r\n  CHROME_PLUGIN_NOT_INSTALL = \"CHROME_PLUGIN_NOT_INSTALL\",\r\n  MEDIA_OPTION_INVALID = \"MEDIA_OPTION_INVALID\",\r\n  PERMISSION_DENIED = \"PERMISSION_DENIED\",\r\n  CONSTRAINT_NOT_SATISFIED = \"CONSTRAINT_NOT_SATISFIED\",\r\n  TRACK_IS_DISABLED = \"TRACK_IS_DISABLED\",\r\n  SHARE_AUDIO_NOT_ALLOWED = \"SHARE_AUDIO_NOT_ALLOWED\",\r\n  LOW_STREAM_ENCODING_ERROR = \"LOW_STREAM_ENCODING_ERROR\",\r\n  INVALID_UINT_UID_FROM_STRING_UID = \"INVALID_UINT_UID_FROM_STRING_UID\",\r\n  CAN_NOT_GET_PROXY_SERVER = \"CAN_NOT_GET_PROXY_SERVER\",\r\n  CAN_NOT_GET_GATEWAY_SERVER = \"CAN_NOT_GET_GATEWAY_SERVER\",\r\n  VOID_GATEWAY_ADDRESS = \"VOID_GATEWAY_ADDRESS\",\r\n  UID_CONFLICT = \"UID_CONFLICT\",\r\n  INVALID_LOCAL_TRACK = \"INVALID_LOCAL_TRACK\",\r\n  INVALID_TRACK = \"INVALID_TRACK\",\r\n  SENDER_NOT_FOUND = \"SENDER_NOT_FOUND\",\r\n  CREATE_OFFER_FAILED = \"CREATE_OFFER_FAILED\",\r\n  SET_ANSWER_FAILED = \"SET_ANSWER_FAILED\",\r\n  ICE_FAILED = \"ICE_FAILED\",\r\n  PC_CLOSED = \"PC_CLOSED\",\r\n  SENDER_REPLACE_FAILED = \"SENDER_REPLACE_FAILED\",\r\n  GATEWAY_P2P_LOST = \"GATEWAY_P2P_LOST\",\r\n  NO_ICE_CANDIDATE = \"NO_ICE_CANDIDATE\",\r\n  CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS = \"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\",\r\n  EXIST_DISABLED_VIDEO_TRACK = \"EXIST_DISABLED_VIDEO_TRACK\",\r\n  INVALID_REMOTE_USER = \"INVALID_REMOTE_USER\",\r\n  REMOTE_USER_IS_NOT_PUBLISHED = \"REMOTE_USER_IS_NOT_PUBLISHED\",\r\n  CUSTOM_REPORT_SEND_FAILED = \"CUSTOM_REPORT_SEND_FAILED\",\r\n  CUSTOM_REPORT_FREQUENCY_TOO_HIGH = \"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\",\r\n  FETCH_AUDIO_FILE_FAILED = \"FETCH_AUDIO_FILE_FAILED\",\r\n  READ_LOCAL_AUDIO_FILE_ERROR = \"READ_LOCAL_AUDIO_FILE_ERROR\",\r\n  DECODE_AUDIO_FILE_FAILED = \"DECODE_AUDIO_FILE_FAILED\",\r\n  WS_ABORT = \"WS_ABORT\",\r\n  WS_DISCONNECT = \"WS_DISCONNECT\",\r\n  WS_ERR = \"WS_ERR\",\r\n  LIVE_STREAMING_TASK_CONFLICT = \"LIVE_STREAMING_TASK_CONFLICT\",\r\n  LIVE_STREAMING_INVALID_ARGUMENT = \"LIVE_STREAMING_INVALID_ARGUMENT\",\r\n  LIVE_STREAMING_INTERNAL_SERVER_ERROR = \"LIVE_STREAMING_INTERNAL_SERVER_ERROR\",\r\n  LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED = \"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\",\r\n  LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED = \"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\",\r\n  LIVE_STREAMING_CDN_ERROR = \"LIVE_STREAMING_CDN_ERROR\",\r\n  LIVE_STREAMING_INVALID_RAW_STREAM = \"LIVE_STREAMING_INVALID_RAW_STREAM\",\r\n  LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT = \"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\",\r\n  LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE = \"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\",\r\n  LIVE_STREAMING_WARN_FREQUENT_REQUEST = \"LIVE_STREAMING_WARN_FREQUENT_REQUEST\",\r\n  WEBGL_INTERNAL_ERROR = \"WEBGL_INTERNAL_ERROR\",\r\n  BEAUTY_PROCESSOR_INTERNAL_ERROR = \"BEAUTY_PROCESSOR_INTERNAL_ERROR\",\r\n  CROSS_CHANNEL_WAIT_STATUS_ERROR = \"CROSS_CHANNEL_WAIT_STATUS_ERROR\",\r\n  CROSS_CHANNEL_FAILED_JOIN_SRC = \"CROSS_CHANNEL_FAILED_JOIN_SEC\",\r\n  CROSS_CHANNEL_FAILED_JOIN_DEST = \"CROSS_CHANNEL_FAILED_JOIN_DEST\",\r\n  CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST = \"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\",\r\n  CROSS_CHANNEL_SERVER_ERROR_RESPONSE = \"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\",\r\n  METADATA_OUT_OF_RANGE = \"METADATA_OUT_OF_RANGE\"\r\n}\r\n\r\nexport const createClient = (config: ClientConfig) => {\r\n  let client: IAgoraRTCClient\r\n  function createClosure() {\r\n    if (!client) {\r\n      client = AgoraRTC.createClient(config)\r\n    }\r\n    return client\r\n  }\r\n  return () => createClosure()\r\n}\r\n\r\nexport function createMicrophoneAndCameraTracks(\r\n  audioConfig?: MicrophoneAudioTrackInitConfig | undefined,\r\n  videoConfig?: CameraVideoTrackInitConfig | undefined\r\n) {\r\n  let tracks: [IMicrophoneAudioTrack, ICameraVideoTrack] | null = null\r\n  async function createClosure() {\r\n    tracks = await AgoraRTC.createMicrophoneAndCameraTracks(\r\n      audioConfig,\r\n      videoConfig\r\n    )\r\n    return tracks\r\n  }\r\n  return function useMicrophoneAndCameraTracks() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(tracks)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((tracks) => {\r\n          ref.current = tracks\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        tracks = null\r\n      }\r\n    }, [])\r\n    return { ready, tracks: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\nexport function createBufferSourceAudioTrack(\r\n  config: BufferSourceAudioTrackInitConfig\r\n) {\r\n  let track: IBufferSourceAudioTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createBufferSourceAudioTrack(config)\r\n    return track\r\n  }\r\n  return function useBufferSourceAudioTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\nexport function createCameraVideoTrack(config?: CameraVideoTrackInitConfig) {\r\n  let track: ICameraVideoTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createCameraVideoTrack(config)\r\n    return track\r\n  }\r\n  return function useCameraVideoTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\nexport function createCustomAudioTrack(config: CustomAudioTrackInitConfig) {\r\n  let track: ILocalAudioTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createCustomAudioTrack(config)\r\n    return track\r\n  }\r\n  return function useCustomAudioTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\nexport function createCustomVideoTrack(config: CustomVideoTrackInitConfig) {\r\n  let track: ILocalVideoTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createCustomVideoTrack(config)\r\n    return track\r\n  }\r\n  return function useCustomVideoTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\nexport function createMicrophoneAudioTrack(\r\n  config?: MicrophoneAudioTrackInitConfig\r\n) {\r\n  let track: IMicrophoneAudioTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createMicrophoneAudioTrack(config)\r\n    return track\r\n  }\r\n  return function useMicrophoneAudioTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\nexport function createScreenVideoTrack(\r\n  config: ScreenVideoTrackInitConfig,\r\n  withAudio?: 'enable' | 'disable' | 'auto'\r\n) {\r\n  let tracks: [ILocalVideoTrack, ILocalAudioTrack] | ILocalVideoTrack\r\n  async function createClosure() {\r\n    tracks = await AgoraRTC.createScreenVideoTrack(config, withAudio)\r\n    return tracks\r\n  }\r\n  return function useScreenVideoTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\r\n    const ref = useRef(tracks)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === undefined) {\r\n        createClosure().then((tracks) => {\r\n          ref.current = tracks\r\n          setReady(true)\r\n        }, (e) => {\r\n          setAgoraRTCError(e)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n    }, [])\r\n    return { ready, tracks: ref.current, error: agoraRTCError }\r\n  }\r\n}\r\n\r\n\r\nexport const AgoraVideoPlayer = (props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & { videoTrack: ILocalVideoTrack | IRemoteVideoTrack | ICameraVideoTrack } & {config?: VideoPlayerConfig}) => {\r\n  const vidDiv: RefObject<HTMLDivElement> = useRef(null)\r\n  const { videoTrack, config, ...other } = props;\r\n  useEffect(() => {\r\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current, config)\r\n    return () => {\r\n      videoTrack.stop()\r\n    }\r\n  }, [videoTrack])\r\n\r\n  return <div {...other} ref={vidDiv} />\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}